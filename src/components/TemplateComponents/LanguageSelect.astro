---
// 改编自 Starlight 的 LanguageSelect - https://github.com/withastro/starlight/blob/15747325112c9fe43b8dfa4e986b95cf8e66af49/packages/starlight/components/LanguageSelect.astro
// MIT 许可证
// 版权所有 (c) 2023 [Astro contributors](https://github.com/withastro/starlight/graphs/contributors)
// 特此免费授予任何获得本软件及相关文档文件（“软件”）副本的人无限制地使用本软件的权利，包括但不限于使用、复制、修改、合并、出版、分发、再许可及/或销售本软件的副本，并允许被提供本软件的人在遵守以下条件的情况下也享有这些权利：

// 必须在本软件的所有副本或主要部分上包含上述版权声明和本许可声明。

// 本软件按“原样”提供，不附带任何明示或暗示的担保，包括但不限于对适销性、针对特定用途的适用性及非侵权的担保。在任何情况下，作者或版权持有人均不对因本软件或本软件的使用或其他交易而产生的任何索赔、损害赔偿或其他责任承担责任，无论是在合同诉讼、侵权行为或其他方面均是如此。
import Select from "./Select.astro";
import { getLocale, getSwitcherData, t } from "i18n:astro";
const locale = getLocale();
const data = getSwitcherData();
---

{
	(
		<starlight-lang-select>
			<Select
				label={locale}
				value={locale}
				options={data.map((option) => ({
					value: option.href,
					selected: option.locale === locale,
					label: t(`languageSelect.${option.locale}` as any),
				}))}
				width="6em"
			/>
		</starlight-lang-select>
	)
}

<script>
	// 定义 StarlightLanguageSelect 类，继承自 HTMLElement
	class StarlightLanguageSelect extends HTMLElement {
		constructor() {
			super();
			// 查找元素内的 <select> 标签
			const select = this.querySelector("select");
			if (select) {
				// 为 <select> 标签添加 "change" 事件监听器
				select.addEventListener("change", (e) => {
					if (e.currentTarget instanceof HTMLSelectElement) {
						// 改变窗口路径，实现页面跳转
						window.location.pathname = e.currentTarget.value;
					}
				});
			}
		}
	}
	// 注册自定义元素
	customElements.define("starlight-lang-select", StarlightLanguageSelect);
</script>
